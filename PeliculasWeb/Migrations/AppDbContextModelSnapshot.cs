// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeliculasWeb.Data;

#nullable disable

namespace PeliculasWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PeliculasWeb.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActorId"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreActor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsPremium")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PremiosGanados")
                        .HasColumnType("int");

                    b.HasKey("DirectorId");

                    b.ToTable("Directores");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Pelicula", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculaId"));

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEstreno")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePelicula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sipnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeliculaId");

                    b.HasIndex("ActorId");

                    b.HasIndex("DirectorId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Reseña", b =>
                {
                    b.Property<int>("ReseñaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReseñaId"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsRecomendada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaReseña")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.HasKey("ReseñaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("Reseñas");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Pelicula", b =>
                {
                    b.HasOne("PeliculasWeb.Models.Actor", "Actor")
                        .WithMany("PeliculasProtagonizadas")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeliculasWeb.Models.Director", "Director")
                        .WithMany("PeliculasDirigidas")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Reseña", b =>
                {
                    b.HasOne("PeliculasWeb.Models.Cliente", "Cliente")
                        .WithMany("Reseñas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeliculasWeb.Models.Pelicula", "Pelicula")
                        .WithMany("Reseñas")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Actor", b =>
                {
                    b.Navigation("PeliculasProtagonizadas");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Cliente", b =>
                {
                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Director", b =>
                {
                    b.Navigation("PeliculasDirigidas");
                });

            modelBuilder.Entity("PeliculasWeb.Models.Pelicula", b =>
                {
                    b.Navigation("Reseñas");
                });
#pragma warning restore 612, 618
        }
    }
}
